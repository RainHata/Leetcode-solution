1. Two Sum

Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].
=====================================================================================
Solution: This is a plain question, we just use two loops to get the elements
Date: 2019/03/20
Language: C

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* twoSum(int* nums, int numsSize, int target) {
    
    int* returnArr = malloc(sizeof(int) * 2);
    bool flag = false;
    
    for(int i = 0; i < numsSize - 1; i++)
    {
        //returnArr[0] = nums[i];
        for(int j = i + 1; j < numsSize; j++)
        {
            //returnArr[1] = nums[j];
            if(nums[j] == target - nums[i])
            {
                returnArr[0] = i;
                returnArr[1] = j;
                //flag = true;
                //break;
                return returnArr;
            }
        }
        
        //if(flag)
           //break;
    }
    return 0;
    //return returnArr;
}
